[[runners]]
  name = "gitlab-build-autoscale"
{% if docker_auth_key | length %}  environment = ["DOCKER_AUTH_CONFIG={'auths': {'https://index.docker.io/v1/': {'auth': '{{ docker_auth_key }}'}}}"]
{% endif %}
  limit = 10
  url = "https://gitlab.com"
  executor = "docker+machine"
  [runners.docker]
    image = "bash:latest"
    tls_verify = true
    privileged = false
  [runners.cache]
    Type = "s3"
    Path = "gitlab-cache"
    Shared = true
    [runners.cache.s3]
      BucketName = "{{ s3_artifact_bucket }}"
      BucketLocation = "{{ vpc.region }}"
      AuthenticationType = "iam"
  [runners.machine]
    IdleCount = 0
    IdleTime = 3600
    MaxBuilds = 100
    MachineDriver = "amazonec2"
    MachineName = "machine-%s"  # must be short; hostname
    MachineOptions = [
      # docker-machine has a built-in AWS SDK client that
      # will query container metadeta for AWS credentials
      # provided in an IAM instance profile role. This is
      # not documented via gitlab, but is more secure than
      # storing static AWS credentials in the runner. The
      # following machine options should be omitted:
      #    amazonec2-access-key
      #    amazonec2-secret-key
      "amazonec2-region={{ vpc.region }}",
      "amazonec2-zone={{ vpc.zone }}",
      "amazonec2-vpc-id={{ vpc.id }}",
      "amazonec2-subnet-id={{ subnet_private.id }}",
      "amazonec2-use-private-address=true",
      "amazonec2-private-address-only=true",
      "amazonec2-security-group=docker-machine-instance",
      "amazonec2-iam-instance-profile=gitlab-build-autoscale-machine",
      "amazonec2-instance-type={{ gitlab_machine_instance_type }}",
      "amazonec2-ami={{ gitlab_machine_ami }}",
      "amazonec2-volume-type=gp3",
      "amazonec2-retries=3",
      "amazonec2-tags=app,gitlab,Name,gitlab-build-machine"
    ]
